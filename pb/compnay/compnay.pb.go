// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/compnay/compnay.proto

/*
Package company is a generated protocol buffer package.

It is generated from these files:
	pb/compnay/compnay.proto

It has these top-level messages:
	CompanyData
	CompanyListRrequest
	CompanyListResponse
	CompanyDetailRequest
	CompanyDetailResponse
*/
package company

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CompanyData struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Descrpition string `protobuf:"bytes,3,opt,name=descrpition" json:"descrpition,omitempty"`
	LogoUrl     string `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl" json:"logo_url,omitempty"`
}

func (m *CompanyData) Reset()                    { *m = CompanyData{} }
func (m *CompanyData) String() string            { return proto.CompactTextString(m) }
func (*CompanyData) ProtoMessage()               {}
func (*CompanyData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CompanyData) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CompanyData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CompanyData) GetDescrpition() string {
	if m != nil {
		return m.Descrpition
	}
	return ""
}

func (m *CompanyData) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

type CompanyListRrequest struct {
}

func (m *CompanyListRrequest) Reset()                    { *m = CompanyListRrequest{} }
func (m *CompanyListRrequest) String() string            { return proto.CompactTextString(m) }
func (*CompanyListRrequest) ProtoMessage()               {}
func (*CompanyListRrequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CompanyListResponse struct {
	Companies *CompanyData `protobuf:"bytes,1,opt,name=companies" json:"companies,omitempty"`
}

func (m *CompanyListResponse) Reset()                    { *m = CompanyListResponse{} }
func (m *CompanyListResponse) String() string            { return proto.CompactTextString(m) }
func (*CompanyListResponse) ProtoMessage()               {}
func (*CompanyListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CompanyListResponse) GetCompanies() *CompanyData {
	if m != nil {
		return m.Companies
	}
	return nil
}

type CompanyDetailRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *CompanyDetailRequest) Reset()                    { *m = CompanyDetailRequest{} }
func (m *CompanyDetailRequest) String() string            { return proto.CompactTextString(m) }
func (*CompanyDetailRequest) ProtoMessage()               {}
func (*CompanyDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CompanyDetailRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CompanyDetailResponse struct {
	Company *CompanyData `protobuf:"bytes,1,opt,name=company" json:"company,omitempty"`
}

func (m *CompanyDetailResponse) Reset()                    { *m = CompanyDetailResponse{} }
func (m *CompanyDetailResponse) String() string            { return proto.CompactTextString(m) }
func (*CompanyDetailResponse) ProtoMessage()               {}
func (*CompanyDetailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CompanyDetailResponse) GetCompany() *CompanyData {
	if m != nil {
		return m.Company
	}
	return nil
}

func init() {
	proto.RegisterType((*CompanyData)(nil), "company.CompanyData")
	proto.RegisterType((*CompanyListRrequest)(nil), "company.CompanyListRrequest")
	proto.RegisterType((*CompanyListResponse)(nil), "company.CompanyListResponse")
	proto.RegisterType((*CompanyDetailRequest)(nil), "company.CompanyDetailRequest")
	proto.RegisterType((*CompanyDetailResponse)(nil), "company.CompanyDetailResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Company service

type CompanyClient interface {
	List(ctx context.Context, in *CompanyListRrequest, opts ...grpc.CallOption) (*CompanyListResponse, error)
	GetDetail(ctx context.Context, in *CompanyDetailRequest, opts ...grpc.CallOption) (*CompanyDetailResponse, error)
}

type companyClient struct {
	cc *grpc.ClientConn
}

func NewCompanyClient(cc *grpc.ClientConn) CompanyClient {
	return &companyClient{cc}
}

func (c *companyClient) List(ctx context.Context, in *CompanyListRrequest, opts ...grpc.CallOption) (*CompanyListResponse, error) {
	out := new(CompanyListResponse)
	err := grpc.Invoke(ctx, "/company.Company/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *companyClient) GetDetail(ctx context.Context, in *CompanyDetailRequest, opts ...grpc.CallOption) (*CompanyDetailResponse, error) {
	out := new(CompanyDetailResponse)
	err := grpc.Invoke(ctx, "/company.Company/GetDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Company service

type CompanyServer interface {
	List(context.Context, *CompanyListRrequest) (*CompanyListResponse, error)
	GetDetail(context.Context, *CompanyDetailRequest) (*CompanyDetailResponse, error)
}

func RegisterCompanyServer(s *grpc.Server, srv CompanyServer) {
	s.RegisterService(&_Company_serviceDesc, srv)
}

func _Company_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyListRrequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/company.Company/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServer).List(ctx, req.(*CompanyListRrequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Company_GetDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CompanyDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CompanyServer).GetDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/company.Company/GetDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CompanyServer).GetDetail(ctx, req.(*CompanyDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Company_serviceDesc = grpc.ServiceDesc{
	ServiceName: "company.Company",
	HandlerType: (*CompanyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Company_List_Handler,
		},
		{
			MethodName: "GetDetail",
			Handler:    _Company_GetDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/compnay/compnay.proto",
}

func init() { proto.RegisterFile("pb/compnay/compnay.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x69, 0xad, 0xd6, 0x4e, 0xc1, 0xc3, 0xb8, 0x0b, 0x75, 0x51, 0x29, 0x3d, 0xc8, 0x9e,
	0x2a, 0xd4, 0x37, 0x50, 0x61, 0x51, 0x3c, 0x05, 0x3c, 0x4b, 0x76, 0x1b, 0x24, 0xd0, 0x4d, 0x62,
	0x92, 0x3d, 0xec, 0xa3, 0xf8, 0xb6, 0xd2, 0xa4, 0xc1, 0x5a, 0x75, 0x4f, 0x9d, 0x99, 0x7f, 0x9a,
	0xef, 0xff, 0x13, 0x28, 0xd4, 0xfa, 0x76, 0x23, 0xb7, 0x4a, 0xd0, 0x7d, 0xf8, 0xd6, 0x4a, 0x4b,
	0x2b, 0x31, 0xed, 0x5b, 0x2a, 0xf6, 0x95, 0x80, 0xfc, 0xc1, 0x97, 0x8f, 0xd4, 0x52, 0x3c, 0x83,
	0x98, 0xb7, 0x45, 0x54, 0x46, 0xcb, 0x63, 0x12, 0xf3, 0x16, 0x11, 0x12, 0x41, 0xb7, 0xac, 0x88,
	0xcb, 0x68, 0x99, 0x11, 0x57, 0x63, 0x09, 0x79, 0xcb, 0xcc, 0x46, 0x2b, 0x6e, 0xb9, 0x14, 0xc5,
	0x91, 0x93, 0xc6, 0x23, 0xbc, 0x80, 0xd3, 0x4e, 0xbe, 0xcb, 0xb7, 0x9d, 0xee, 0x8a, 0xc4, 0xc9,
	0x69, 0xdf, 0xbf, 0xea, 0xae, 0x9a, 0xc3, 0xf9, 0xc0, 0x7b, 0xe1, 0xc6, 0x12, 0xcd, 0x3e, 0x76,
	0xcc, 0xd8, 0xea, 0xe9, 0xe7, 0x98, 0x19, 0x25, 0x85, 0x61, 0xd8, 0x40, 0xe6, 0x8d, 0x72, 0x66,
	0x9c, 0xab, 0xbc, 0x99, 0xd5, 0x83, 0xf5, 0x7a, 0xe4, 0x9b, 0x7c, 0xaf, 0x55, 0x37, 0x30, 0x0b,
	0x0a, 0xb3, 0x94, 0x77, 0xc4, 0x23, 0xa6, 0xd1, 0xaa, 0x15, 0xcc, 0x27, 0x7b, 0x03, 0xb4, 0x86,
	0x70, 0x3b, 0x07, 0x91, 0x61, 0xa9, 0xf9, 0x8c, 0x20, 0x1d, 0x04, 0xbc, 0x87, 0xa4, 0x0f, 0x80,
	0x97, 0xd3, 0x5f, 0xc6, 0x69, 0x17, 0x7f, 0xab, 0x81, 0xff, 0x0c, 0xd9, 0x8a, 0x59, 0x6f, 0x0a,
	0xaf, 0x7e, 0xb1, 0xc7, 0xa1, 0x16, 0xd7, 0xff, 0xc9, 0xfe, 0xac, 0xf5, 0x89, 0x7b, 0xee, 0xbb,
	0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x64, 0x18, 0x10, 0x01, 0x0a, 0x02, 0x00, 0x00,
}
